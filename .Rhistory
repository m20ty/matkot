install.packages('languageserver')
find.package('egg')
find.package('eggggg')
'egg' %in% rownames(installed.packages())
'egggggg' %in% rownames(installed.packages())
pkg <- 'egg'
if(!(pkg %in% rownames(installed.packages()))) install.packages(pkg)
'seriation' %in% rownames(installed.packages())
'e1071' %in% rownames(installed.packages())
pkg <- 'e1071'
if(!(pkg %in% rownames(installed.packages()))) install.packages(pkg)
?install.packages
find.package('languageserver')
install.packages('languageserver')
find.package('IRkernel')
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
?IRkernel::installspec
IRkernel::installspec()
IRkernel::installspec()
29/13
11.5/2
29/17.25
13*29/17.25
find.package('data.table')
find.package('ggplot2')
find.package('magrittr')
find.package('Matrix')
find.package('sctransform')
install.packages('ComplexHeatmap')
install_github("jokergoo/ComplexHeatmap")
library(devtools)
install.packages('devtools')
install.packages("devtools")
find.package('seriation')
find.package('cluster')
library(devtools)
install_github("jokergoo/ComplexHeatmap")
find.package('knitr')
find.package('kableExtra')
install.packages('kableExtra')
library(kableExtra)
?scroll_box
?kable_styling
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(data.table)
library(ggplot2)
library(magrittr)
library(plyr)
library(stringr)
library(Matrix)
library(caTools)
library(cowplot)
library(knitr)
source('functions.R')
expmat <- readMM('../data_and_figures/cs_data/matrix.mtx')
barcodes <- fread('../data_and_figures/cs_data/barcodes.csv')
features <- fread('../data_and_figures/cs_data/features.csv')
colnames(expmat) <- copy(barcodes)$barcode
rownames(expmat) <- copy(features)$gene_id
setkey(barcodes, barcode)
setkey(features, gene_id)
# Here's how I got the lncRNA IDs from biomaRt:
# library(biomaRt)
# ensembl_human <- useMart('ensembl', dataset = 'hsapiens_gene_ensembl')
# lncrna_human <- getBM('ensembl_gene_id', filters = 'biotype', value = 'lncRNA', mart = ensembl_human)$ensembl_gene_id
# fwrite(list(lncrna_human), '../data_and_figures/lncrna_human.txt')
lncrna_human <- fread('../data_and_figures/lncrna_human.txt', header = FALSE, col.names = 'id')$id
SCANDAL_HOUSEKEEPING_GENES_LIST <- c("ACTB", "B2M", "HNRPLL", "HPRT", "PSMB2", "PSMB4", "PPIA", "PRPS1", "PRPS1L1", "PRPS1L3", "PRPS2", "PRPSAP1",
"PRPSAP2", "RPL10", "RPL10A", "RPL10L", "RPL11", "RPL12", "RPL13", "RPL14", "RPL15", "RPL17", "RPL18", "RPL19", "RPL21", "RPL22", "RPL22L1",
"RPL23", "RPL24", "RPL26", "RPL27", "RPL28", "RPL29", "RPL3", "RPL30", "RPL32", "RPL34", "RPL35", "RPL36", "RPL37", "RPL38", "RPL39", "RPL39L",
"RPL3L", "RPL4", "RPL41", "RPL5", "RPL6", "RPL7", "RPL7A", "RPL7L1", "RPL8", "RPL9", "RPLP0", "RPLP1", "RPLP2", "RPS10", "RPS11", "RPS12",
"RPS13", "RPS14", "RPS15", "RPS15A", "RPS16", "RPS17", "RPS18", "RPS19", "RPS20", "RPS21", "RPS24", "RPS25", "RPS26", "RPS27", "RPS27A", "RPS27L",
"RPS28", "RPS29", "RPS3", "RPS3A", "RPS4X", "RPS5", "RPS6", "RPS6KA1", "RPS6KA2", "RPS6KA3", "RPS6KA4", "RPS6KA5", "RPS6KA6", "RPS6KB1",
"RPS6KB2", "RPS6KC1", "RPS6KL1", "RPS7", "RPS8", "RPS9", "RPSA", "TRPS1", "UBB")
SCANDAL_G1S_MARKERS <- c("RRM2", "TYMS" , "UBE2T", "CDK1", "HMGB2", "MAD2L1", "PCNA", "UBE2C", "PBK", "TOP2A", "NUSAP1", "KIAA0101", "HIST1H4C",
"MLF1IP", "GMNN", "BIRC5", "FAM64A", "RNASEH2A", "MELK", "CENPK", "PTTG1", "TK1", "TPX2", "TMEM106C", "CDCA5", "CKS1B", "CDC45", "MCM3", "CENPM",
"AURKB", "PKMYT1", "KIF22","MCM4", "ASF1B", "GINS2", "MCM2", "NUF2", "CDKN3", "GGH", "NDC80", "FEN1", "RRM1", "PRC1" , "DUT", "RAD51AP1", "CKS2",
"MCM7", "CCNE2", "ZWINT")
SCANDAL_G2M_MARKERS <- c("CCNB1", "UBE2C", "PTTG1", "CDC20", "CCNB2", "TOP2A", "FAM64A", "NUSAP1", "CDKN3", "PBK", "PLK1", "HMGB2", "TPX2", "BIRC5",
"MAD2L1", "PRC1", "NUF2", "UBE2T", "CDK1", "CKS2", "CCNA2", "CKAP2", "KNSTRN", "RACGAP1", "CDCA3", "TROAP", "KIF2C", "AURKA", "CENPF", "KPNA2",
"KIF20A", "ECT2", "BUB1", "CDCA8", "BUB1B", "TACC3", "NDC80", "TTK", "TUBA1C", "NCAPD2", "ARL6IP1", "KIF4A", "CKAP2L", "MZT1", "KIFC1", "KIF22",
"TYMS", "SPAG5", "ANP32E", "KIF11", "PSRC1", "TUBB4B", "SMC4", "MXD3", "CDC25B", "OIP5", "GGH", "REEP4", "FOXM1", "TMPO", "GPSM2", "HMGB3",
"ARHGAP11A", "RANGAP1", "H2AFZ")
expmat_subset <- expmat[, barcodes[sample == 'CS1', barcode]]
gene <- col_nnz(expmat_subset)
umi <- colSums(expmat_subset)
plot(sort(gene), type = 'l', main = 'Genes detected', xlab = 'Sorted cells', ylab = 'Number of genes detected')
abline(h = 1000, col = 'grey', lty  = 2)
plot(density(gene, bw = 100), main = 'Genes detected - density', xlab = 'Number of genes detected')
abline(v = 1000, col = 'grey', lty  = 2)
plot(sort(umi), type = 'l', main = 'Total UMI count', xlab = 'Sorted cells', ylab = 'Total UMI count')
abline(h = 5000, col = 'grey', lty  = 2)
plot(density(umi, bw = 1000), main = 'Total UMI count - density', xlab = 'Total UMI count')
abline(v = 5000, col = 'grey', lty  = 2)
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
plot(density(umi/gene), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
plot(density(umi/gene), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
plot(density(umi/gene, bw = 0.05), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
plot(density(umi/gene, bw = 0.01), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
plot(density(umi/gene, bw = 0.05), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
abline(v = 2, col = 'grey', lty = 2)
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
abline(h = 2, col = 'grey', lty = 2)
plot(density(umi/gene, bw = 0.05), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
abline(v = 2, col = 'grey', lty = 2)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
scroll_box(kable_styling(kable(degenes_dbscan_tsne)), height = '400px', width = '600px')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(data.table)
library(ggplot2)
library(magrittr)
library(plyr)
library(stringr)
library(Matrix)
library(caTools)
library(cowplot)
library(knitr)
source('functions.R')
expmat <- readMM('../data_and_figures/cs_data/matrix_premrna.mtx')
barcodes <- fread('../data_and_figures/cs_data/barcodes_premrna.csv')
features <- fread('../data_and_figures/cs_data/features_premrna.csv')
colnames(expmat) <- copy(barcodes)$barcode
rownames(expmat) <- copy(features)$gene_id
setkey(barcodes, barcode)
setkey(features, gene_id)
# Here's how I got the lncRNA IDs from biomaRt:
# library(biomaRt)
# ensembl_human <- useMart('ensembl', dataset = 'hsapiens_gene_ensembl')
# lncrna_human <- getBM('ensembl_gene_id', filters = 'biotype', value = 'lncRNA', mart = ensembl_human)$ensembl_gene_id
# fwrite(list(lncrna_human), '../data_and_figures/lncrna_human.txt')
lncrna_human <- fread('../data_and_figures/lncrna_human.txt', header = FALSE, col.names = 'id')$id
SCANDAL_HOUSEKEEPING_GENES_LIST <- c("ACTB", "B2M", "HNRPLL", "HPRT", "PSMB2", "PSMB4", "PPIA", "PRPS1", "PRPS1L1", "PRPS1L3", "PRPS2", "PRPSAP1",
"PRPSAP2", "RPL10", "RPL10A", "RPL10L", "RPL11", "RPL12", "RPL13", "RPL14", "RPL15", "RPL17", "RPL18", "RPL19", "RPL21", "RPL22", "RPL22L1",
"RPL23", "RPL24", "RPL26", "RPL27", "RPL28", "RPL29", "RPL3", "RPL30", "RPL32", "RPL34", "RPL35", "RPL36", "RPL37", "RPL38", "RPL39", "RPL39L",
"RPL3L", "RPL4", "RPL41", "RPL5", "RPL6", "RPL7", "RPL7A", "RPL7L1", "RPL8", "RPL9", "RPLP0", "RPLP1", "RPLP2", "RPS10", "RPS11", "RPS12",
"RPS13", "RPS14", "RPS15", "RPS15A", "RPS16", "RPS17", "RPS18", "RPS19", "RPS20", "RPS21", "RPS24", "RPS25", "RPS26", "RPS27", "RPS27A", "RPS27L",
"RPS28", "RPS29", "RPS3", "RPS3A", "RPS4X", "RPS5", "RPS6", "RPS6KA1", "RPS6KA2", "RPS6KA3", "RPS6KA4", "RPS6KA5", "RPS6KA6", "RPS6KB1",
"RPS6KB2", "RPS6KC1", "RPS6KL1", "RPS7", "RPS8", "RPS9", "RPSA", "TRPS1", "UBB")
SCANDAL_G1S_MARKERS <- c("RRM2", "TYMS" , "UBE2T", "CDK1", "HMGB2", "MAD2L1", "PCNA", "UBE2C", "PBK", "TOP2A", "NUSAP1", "KIAA0101", "HIST1H4C",
"MLF1IP", "GMNN", "BIRC5", "FAM64A", "RNASEH2A", "MELK", "CENPK", "PTTG1", "TK1", "TPX2", "TMEM106C", "CDCA5", "CKS1B", "CDC45", "MCM3", "CENPM",
"AURKB", "PKMYT1", "KIF22","MCM4", "ASF1B", "GINS2", "MCM2", "NUF2", "CDKN3", "GGH", "NDC80", "FEN1", "RRM1", "PRC1" , "DUT", "RAD51AP1", "CKS2",
"MCM7", "CCNE2", "ZWINT")
SCANDAL_G2M_MARKERS <- c("CCNB1", "UBE2C", "PTTG1", "CDC20", "CCNB2", "TOP2A", "FAM64A", "NUSAP1", "CDKN3", "PBK", "PLK1", "HMGB2", "TPX2", "BIRC5",
"MAD2L1", "PRC1", "NUF2", "UBE2T", "CDK1", "CKS2", "CCNA2", "CKAP2", "KNSTRN", "RACGAP1", "CDCA3", "TROAP", "KIF2C", "AURKA", "CENPF", "KPNA2",
"KIF20A", "ECT2", "BUB1", "CDCA8", "BUB1B", "TACC3", "NDC80", "TTK", "TUBA1C", "NCAPD2", "ARL6IP1", "KIF4A", "CKAP2L", "MZT1", "KIFC1", "KIF22",
"TYMS", "SPAG5", "ANP32E", "KIF11", "PSRC1", "TUBB4B", "SMC4", "MXD3", "CDC25B", "OIP5", "GGH", "REEP4", "FOXM1", "TMPO", "GPSM2", "HMGB3",
"ARHGAP11A", "RANGAP1", "H2AFZ")
expmat <- readMM('../data_and_figures/cs_data/matrix_premrna_unfiltered.mtx')
barcodes <- fread('../data_and_figures/cs_data/barcodes_premrna_unfiltered.csv')
features <- fread('../data_and_figures/cs_data/features_premrna_unfiltered.csv')
colnames(expmat) <- copy(barcodes)$barcode
rownames(expmat) <- copy(features)$gene_id
setkey(barcodes, barcode)
setkey(features, gene_id)
# Here's how I got the lncRNA IDs from biomaRt:
# library(biomaRt)
# ensembl_human <- useMart('ensembl', dataset = 'hsapiens_gene_ensembl')
# lncrna_human <- getBM('ensembl_gene_id', filters = 'biotype', value = 'lncRNA', mart = ensembl_human)$ensembl_gene_id
# fwrite(list(lncrna_human), '../data_and_figures/lncrna_human.txt')
lncrna_human <- fread('../data_and_figures/lncrna_human.txt', header = FALSE, col.names = 'id')$id
SCANDAL_HOUSEKEEPING_GENES_LIST <- c("ACTB", "B2M", "HNRPLL", "HPRT", "PSMB2", "PSMB4", "PPIA", "PRPS1", "PRPS1L1", "PRPS1L3", "PRPS2", "PRPSAP1",
"PRPSAP2", "RPL10", "RPL10A", "RPL10L", "RPL11", "RPL12", "RPL13", "RPL14", "RPL15", "RPL17", "RPL18", "RPL19", "RPL21", "RPL22", "RPL22L1",
"RPL23", "RPL24", "RPL26", "RPL27", "RPL28", "RPL29", "RPL3", "RPL30", "RPL32", "RPL34", "RPL35", "RPL36", "RPL37", "RPL38", "RPL39", "RPL39L",
"RPL3L", "RPL4", "RPL41", "RPL5", "RPL6", "RPL7", "RPL7A", "RPL7L1", "RPL8", "RPL9", "RPLP0", "RPLP1", "RPLP2", "RPS10", "RPS11", "RPS12",
"RPS13", "RPS14", "RPS15", "RPS15A", "RPS16", "RPS17", "RPS18", "RPS19", "RPS20", "RPS21", "RPS24", "RPS25", "RPS26", "RPS27", "RPS27A", "RPS27L",
"RPS28", "RPS29", "RPS3", "RPS3A", "RPS4X", "RPS5", "RPS6", "RPS6KA1", "RPS6KA2", "RPS6KA3", "RPS6KA4", "RPS6KA5", "RPS6KA6", "RPS6KB1",
"RPS6KB2", "RPS6KC1", "RPS6KL1", "RPS7", "RPS8", "RPS9", "RPSA", "TRPS1", "UBB")
SCANDAL_G1S_MARKERS <- c("RRM2", "TYMS" , "UBE2T", "CDK1", "HMGB2", "MAD2L1", "PCNA", "UBE2C", "PBK", "TOP2A", "NUSAP1", "KIAA0101", "HIST1H4C",
"MLF1IP", "GMNN", "BIRC5", "FAM64A", "RNASEH2A", "MELK", "CENPK", "PTTG1", "TK1", "TPX2", "TMEM106C", "CDCA5", "CKS1B", "CDC45", "MCM3", "CENPM",
"AURKB", "PKMYT1", "KIF22","MCM4", "ASF1B", "GINS2", "MCM2", "NUF2", "CDKN3", "GGH", "NDC80", "FEN1", "RRM1", "PRC1" , "DUT", "RAD51AP1", "CKS2",
"MCM7", "CCNE2", "ZWINT")
SCANDAL_G2M_MARKERS <- c("CCNB1", "UBE2C", "PTTG1", "CDC20", "CCNB2", "TOP2A", "FAM64A", "NUSAP1", "CDKN3", "PBK", "PLK1", "HMGB2", "TPX2", "BIRC5",
"MAD2L1", "PRC1", "NUF2", "UBE2T", "CDK1", "CKS2", "CCNA2", "CKAP2", "KNSTRN", "RACGAP1", "CDCA3", "TROAP", "KIF2C", "AURKA", "CENPF", "KPNA2",
"KIF20A", "ECT2", "BUB1", "CDCA8", "BUB1B", "TACC3", "NDC80", "TTK", "TUBA1C", "NCAPD2", "ARL6IP1", "KIF4A", "CKAP2L", "MZT1", "KIFC1", "KIF22",
"TYMS", "SPAG5", "ANP32E", "KIF11", "PSRC1", "TUBB4B", "SMC4", "MXD3", "CDC25B", "OIP5", "GGH", "REEP4", "FOXM1", "TMPO", "GPSM2", "HMGB3",
"ARHGAP11A", "RANGAP1", "H2AFZ")
expmat_subset <- expmat[, barcodes[sample == 'CS1', barcode]]
gene <- col_nnz(expmat_subset)
umi <- colSums(expmat_subset)
plot(sort(gene), type = 'l', main = 'Genes detected', xlab = 'Sorted cells', ylab = 'Number of genes detected')
abline(h = 1000, col = 'grey', lty  = 2)
dim(expmat_subset)
dim(expmat)
summary(gene)
plot(density(gene, bw = 100), main = 'Genes detected - density', xlab = 'Number of genes detected')
abline(v = 1000, col = 'grey', lty  = 2)
plot(sort(umi), type = 'l', main = 'Total UMI count', xlab = 'Sorted cells', ylab = 'Total UMI count')
abline(h = 5000, col = 'grey', lty  = 2)
plot(density(umi, bw = 1000), main = 'Total UMI count - density', xlab = 'Total UMI count')
abline(v = 5000, col = 'grey', lty  = 2)
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
abline(h = 2, col = 'grey', lty = 2)
plot(density(umi/gene, bw = 0.05), main = 'UMI/genes ratio - density', xlab = 'UMI/genes')
abline(v = 2, col = 'grey', lty = 2)
plot(sort(umi/gene), type = 'l', main = 'UMI/genes ratio', xlab = 'Sorted cells', ylab = 'UMI/genes')
abline(h = 2, col = 'grey', lty = 2)
sum(umi/gene >= 2)
scale_factor <- median(colSums(expmat_subset))
expmat_subset <- to_frac(expmat_subset)*scale_factor
getwd()
contractnew <- readLines('manuscript_itay.txt', encoding = 'UTF-8') %>% paste(collapse = ' ') %>% strsplit('') %>% `[[`(1)
contractold <- readLines('manuscript_me.txt', encoding = 'UTF-8') %>% paste(collapse = ' ') %>% strsplit('') %>% `[[`(1)
length(contractnew)
length(contractold)
sum(contractnew == contractold)
library(magrittr)
contractnew <- readLines('manuscript_itay.txt', encoding = 'UTF-8') %>% paste(collapse = ' ') %>% strsplit('') %>% `[[`(1)
contractold <- readLines('manuscript_me.txt', encoding = 'UTF-8') %>% paste(collapse = ' ') %>% strsplit('') %>% `[[`(1)
length(contractnew)
length(contractold)
sum(contractnew == contractold)
all(contractnew == contractold)
matching <- TRUE
i <- 1
while(matching) {
if(contractnew[i] == contractold[i]) {
i <- i + 1
} else {
cat(i)
matching <- FALSE
}
}
head(contractnew)
head(contractold)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# R version 4.0.0 (2020-04-24) -- "Arbor Day"
library(data.table) # 1.13.6
library(DT)
source('functions.R')
samples <- c('CS1', 'CS2', 'CS3', 'CS4', 'CS6', 'CS8')
degenes_dbscan_list <- slapply(
samples,
function(smpl) fread(paste0('../data_and_figures/cs_data/cs_analysis/degenes_dbscan_tsne_sctransform_', smpl, '.csv'))
)
getwd()
getwd()
temp1 <- readLines('temp1.txt')
class(temp1)
length(temp1)
temp1
library(readxl)
install.packages('readxl')
install.packages("readxl")
library(readxl)
library(data.table)
temp <- read_xlsx("C:/Users/tyler.WISMAIN/Downloads/41586_2016_BFnature20123_MOESM100_ESM.xlsx", skip = 8)
temp <- as.data.table(temp)
temp
temp[!is.na(`G1/S`), cat(`G1/S`, sep = "', '")]
temp[!is.na(`G2/M`), cat(`G2/M`, sep = "', '")]
temp <- read_xlsx("C:/Users/tyler.WISMAIN/Downloads/1-s2.0-S0092867419306877-mmc2.xlsx", skip = 4)
temp
temp <- as.data.table(temp)
temp[!is.na(`G1/S`), cat(`G1/S`, sep = "', '")]
temp[!is.na(`G2/M`), cat(`G2/M`, sep = "', '")]
?read_xlsx
temp <- read_xlsx("C:/Users/tyler.WISMAIN/Downloads/41588_2020_726_MOESM3_ESM.xlsx", sheet = 'Table S4')
temp <- read_xlsx("C:/Users/tyler.WISMAIN/Downloads/41588_2020_726_MOESM3_ESM.xlsx", sheet = 'Table S4', skip = 3)
temp <- as.data.table(temp)
temp
head(temp)
temp[!is.na(`Cell Cycle - G2/M`), cat(`Cell Cycle - G2/M`, sep = "', '")]
temp[!is.na(`Cell Cycle - G2/M`)]
temp[!is.na(`Cell Cycle - G2/M`), `Cell Cycle - G2/M`]
temp[!is.na(`Cell Cycle - G2/M`), cat(`Cell Cycle - G2/M`, sep = "', '")]
temp[!is.na(`Cell Cycle - G1/S`), cat(`Cell Cycle - G1/S`, sep = "', '")]
character()
c()
numeric()
temp <- c()
for(i in 1:10) {temp <- c(temp, i)}
temp
class(temp)
plot(1:5, 1:5)
plot(1:5, 1:5)
getwd()
library(ggplot2)
ggplot()
ggplot() + theme_blank()
ggplot() + theme_void()
library(devtools)
library(devtools)
find.package('roxygen2')
library(roxygen2)
create('matkot')
getwd()
install('matkot')
temp <- matrix(rnorm(900), 30, 30)
headl(temp)
library(matkot)
headl(temp)
?headl
?headr
?taill
?head
?tail
?headl
?heat_map
getwd()
setwd('matkot')
use_mit_license('Mike Tyler')
library(devtools)
library(roxygen2)
use_mit_license('Mike Tyler')
