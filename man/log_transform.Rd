% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparse_matrix_functions.R
\name{log_transform}
\alias{log_transform}
\title{Log transformation of a matrix}
\usage{
log_transform(mat, base = 2, reverse = FALSE)
}
\arguments{
\item{mat}{A matrix. May be sparse (i.e. of class \code{dgTMatrix}, \code{dgCMatrix} or \code{dgRMatrix}).}

\item{base}{A positive number: the base with respect to which the logarithms are computed. Default: 2.}

\item{reverse}{If \code{FALSE}, log transform \code{mat}; if \code{TRUE}, reverse log transform, i.e. exponentiate \code{mat}.}
}
\value{
A matrix of the same size and class as \code{mat}.
}
\description{
Log transforms a matrix after adding 1, or the reverse, exponentiates the matrix and then subtracts 1. In the case of sparse matrices (class \code{dgTMatrix}, \code{dgCMatrix} or \code{dgRMatrix}), only the non-zero elements are transformed. This is faster than manually adding or subtracting 1, as it retains the sparse matrix class.
}
\examples{
mat <- matrix(round(runif(100, max = 100)), 10, 10)
log_transform(mat)
log_transform(log_transform(mat), reverse = TRUE)
mat[sample(1:100, 80)] <- 0
mat <- as(mat, 'dgCMatrix')
log_transform(mat)
}
